{"version":3,"sources":["components/Login/index.js","components/Header/index.js","components/Home/index.js","components/ProfilePanel/index.js","components/FilterJobSearch/index.js","components/JobFilterPanel/index.js","components/JobCard/index.js","components/JobsTab/index.js","components/Jobs/index.js","components/ProtectedRoute/index.js","components/SimilarJobCard/index.js","components/JobItemDetails/index.js","components/NotFound/index.js","App.js","index.js"],"names":["Login","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","username","password","showSubmitError","errorMsg","onChangeUsername","event","setState","target","value","onChangePassword","onSubmitSuccess","jwtToken","history","props","Cookies","set","expires","path","replace","onSubmitFailure","submitForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$state","userDetails","options","response","data","wrap","_context","prev","next","preventDefault","method","body","JSON","stringify","fetch","sent","json","ok","jwt_token","error_msg","stop","_x","apply","renderUsernameField","_jsxs","_Fragment","children","_jsx","className","htmlFor","type","id","placeholder","onChange","renderPasswordField","_inherits","_createClass","key","_this$state2","this","undefined","get","Redirect","to","src","alt","onSubmit","Component","withRouter","onClickLogout","remove","Link","AiFillHome","BsBriefcaseFill","FiLogOut","onClick","Home","Header","apiStatusConstants","ProfilePanel","profileApiStatus","jobProfileDescription","getProfileDetails","name","profileImageUrl","shortBio","Loader","color","height","width","renderProfilePanel","FilterJobSearch","_props$employmentType","employmentTypesList","_props$employmentType2","employmentTypeFilter","checkEmploymentType","_props$salaryRangesLi","salaryRangesList","updateSalaryRangeRadio","_props$salaryRange","salaryRange","map","eachItem","employmentTypeId","checked","includes","label","eachSalary","salaryRangeId","JobFilterPanel","apiStatus","changeToCamelCase","profDetails","profile_image_url","short_bio","updatedData","headers","Authorization","profile_details","typeId","_this$props","updateEmploymentTypeFilter","filter","each","_toConsumableArray","salaryId","updateSalaryRange","_this$props2","JobCard","jobDetails","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","rating","title","AiFillStar","IoLocationSharp","BsFillBriefcaseFill","JobsTab","searchInput","jobsList","convertDataToCamelCase","jobs","eachData","company_logo_url","employment_type","job_description","package_per_annum","getJobsList","employmentTypeQuery","apiUrl","join","changeSearchInput","onEnterKey","renderSearchBar","onKeyDown","BsSearch","renderNoJobFoundView","renderSuccessView","eachJobDescription","renderFailureView","renderLoadingView","renderJobDescriptionList","updatedList","Jobs","ProtectedRoute","Cookie","Route","_objectSpread","SimilarJobCard","JobItemDetails","jobDetailsApiStatus","similarJobs","getCamelCasedData","job_details","updatedJobDetails","companyWebsiteUrl","company_website_url","skills","eachSkill","imageUrl","image_url","lifeAtCompnay","description","life_at_company","similar_jobs","eachJob","getJobItemDetails","match","params","_this$getCamelCasedDa","renderLoaderView","renderApiFailureView","renderJobDetails","href","FiExternalLink","renderJobDetailsPage","NotFound","App","Switch","exact","component","ReactDOM","render","React","StrictMode","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.3a6645a7.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    this.setState({showSubmitError: true, errorMsg})\n  }\n\n  submitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  renderUsernameField = () => {\n    const {username} = this.state\n    return (\n      <>\n        <label className=\"title-description\" htmlFor=\"username\">\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          value={username}\n          placeholder=\"Username\"\n          onChange={this.onChangeUsername}\n          className=\"title-input\"\n        />\n      </>\n    )\n  }\n\n  renderPasswordField = () => {\n    const {password} = this.state\n    return (\n      <>\n        <label className=\"title-description\" htmlFor=\"password\">\n          PASSWORD\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={this.onChangePassword}\n          className=\"title-input\"\n        />\n      </>\n    )\n  }\n\n  render() {\n    const {showSubmitError, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <div className=\"login-form-outer-bg-container\">\n        <div className=\"form-submission-bg-conatiner\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"website-logo\"\n          />\n          <form className=\"form-details-container\" onSubmit={this.submitForm}>\n            {this.renderUsernameField()}\n            {this.renderPasswordField()}\n            <button type=\"submit\" className=\"login-button\">\n              Login\n            </button>\n            {showSubmitError && <p className=\"error-msg\"> *{errorMsg} </p>}\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import {AiFillHome} from 'react-icons/ai'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport {FiLogOut} from 'react-icons/fi'\n\nimport {Link, withRouter} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n  return (\n    <>\n      <nav className=\"navbar-main-bg-container\">\n        <Link to=\"/\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"header-website-logo\"\n          />\n        </Link>\n        <div className=\"icons-bg-container\">\n          <Link to=\"/\">\n            <AiFillHome className=\"react-icon\" />\n          </Link>\n          <Link to=\"/jobs\">\n            <BsBriefcaseFill className=\"react-icon\" />\n          </Link>\n          <FiLogOut className=\"react-icon\" onClick={onClickLogout} />\n        </div>\n      </nav>\n      <nav className=\"navbar-main-bg-container-lg\">\n        <Link to=\"/\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"header-website-logo-lg\"\n          />\n        </Link>\n        <ul className=\"home-n-jobs-container\">\n          <li className=\"home-n-jobs-options\">\n            <Link to=\"/\" className=\"nav-home-n-jobs-link\">\n              Home\n            </Link>\n          </li>\n          <li className=\"home-n-jobs-options\">\n            <Link to=\"/jobs\" className=\"nav-home-n-jobs-link\">\n              Jobs\n            </Link>\n          </li>\n        </ul>\n        <button className=\"logout-button\" type=\"button\" onClick={onClickLogout}>\n          Logout\n        </button>\n      </nav>\n    </>\n  )\n}\n\nexport default withRouter(Header)\n","import Cookies from 'js-cookie'\nimport {Redirect, Link} from 'react-router-dom'\n\nimport Header from '../Header'\n\nimport './index.css'\n\nconst Home = () => {\n  const jwtToken = Cookies.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"home-main-bg-container\">\n        <div className=\"home-inner-bg-container\">\n          <h1 className=\"home-title\"> Find The Job That Fits Your Life </h1>\n          <p className=\"home-title-description\">\n            Millions of people are searching for jobs, salary information,\n            company reviews. Find the job that fits your abilities and\n            potential.\n          </p>\n          <Link to=\"/jobs\">\n            <button className=\"home-find-jobs-button\" type=\"button\">\n              Find Jobs\n            </button>\n          </Link>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","import Loader from 'react-loader-spinner'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst ProfilePanel = props => {\n  const {profileApiStatus, jobProfileDescription, getProfileDetails} = props\n  const {name, profileImageUrl, shortBio} = jobProfileDescription\n\n  const renderProfileBoard = () => (\n    <div className=\"profile-details-container\">\n      <img src={profileImageUrl} alt=\"profile\" className=\"profile-image\" />\n      <h1 className=\"profile-name\"> {name} </h1>\n      <p className=\"profile-bio\">{shortBio}</p>\n    </div>\n  )\n\n  const renderFailureBoard = () => (\n    <div className=\"profile-failure-container\">\n      <button\n        className=\"retry-button\"\n        type=\"button\"\n        onClick={getProfileDetails}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  const renderLoadingBoard = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  const renderProfilePanel = () => {\n    switch (profileApiStatus) {\n      case apiStatusConstants.success:\n        return renderProfileBoard()\n      case apiStatusConstants.failure:\n        return renderFailureBoard()\n      case apiStatusConstants.inProgress:\n        return renderLoadingBoard()\n      default:\n        return null\n    }\n  }\n\n  return <> {renderProfilePanel()} </>\n}\n\nexport default ProfilePanel\n","import './index.css'\n\nconst FilterJobSearch = props => {\n  const {\n    employmentTypesList = [],\n    employmentTypeFilter = [],\n    checkEmploymentType,\n    salaryRangesList = [],\n    updateSalaryRangeRadio,\n    salaryRange = '',\n  } = props\n\n  const renderEmploymentTypeList = () => (\n    <ul className=\"filter-unordered-list\">\n      {employmentTypesList?.map(eachItem => (\n        <li className=\"filter-list-items\" key={eachItem.employmentTypeId}>\n          <input\n            className=\"checkbox-input\"\n            type=\"checkbox\"\n            id={eachItem.employmentTypeId}\n            value={eachItem.employmentTypeId}\n            onChange={() => checkEmploymentType(eachItem.employmentTypeId)}\n            checked={employmentTypeFilter.includes(eachItem.employmentTypeId)}\n          />\n          <label className=\"filter-label\" htmlFor={eachItem.employmentTypeId}>\n            {eachItem.label}\n          </label>\n        </li>\n      ))}\n    </ul>\n  )\n\n  const renderSalaryRange = () => (\n    <ul className=\"filter-unordered-list\">\n      {salaryRangesList?.map(eachSalary => (\n        <li className=\"filter-list-items\" key={eachSalary.salaryRangeId}>\n          <input\n            className=\"checkbox-input\"\n            name=\"salary\"\n            type=\"radio\"\n            id={eachSalary.salaryRangeId}\n            value={eachSalary.salaryRangeId}\n            onChange={() => updateSalaryRangeRadio(eachSalary.salaryRangeId)}\n            checked={eachSalary.salaryRangeId === salaryRange}\n          />\n          <label className=\"filter-label\" htmlFor={eachSalary.salaryRangeId}>\n            {eachSalary.label}\n          </label>\n        </li>\n      ))}\n    </ul>\n  )\n\n  return (\n    <div className=\"employment-filter-main-bg-container\">\n      <>\n        <h1 className=\"employment-type-title\"> Type of Employment </h1>\n        {renderEmploymentTypeList()}\n      </>\n      <hr className=\"separator\" />\n      <>\n        <h1 className=\"employment-type-title\"> Salary Range </h1>\n        {renderSalaryRange()}\n      </>\n    </div>\n  )\n}\n\nexport default FilterJobSearch\n","import {Component} from 'react'\n\nimport Cookies from 'js-cookie'\n\nimport ProfilePanel from '../ProfilePanel'\nimport FilterJobSearch from '../FilterJobSearch'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass JobFilterPanel extends Component {\n  state = {\n    apiStatus: apiStatusConstants.initial,\n    jobProfileDescription: {},\n  }\n\n  componentDidMount() {\n    this.getProfileDetails()\n  }\n\n  changeToCamelCase = profDetails => ({\n    name: profDetails.name,\n    profileImageUrl: profDetails.profile_image_url,\n    shortBio: profDetails.short_bio,\n  })\n\n  getProfileDetails = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = 'https://apis.ccbp.in/profile'\n\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n\n    const response = await fetch(apiUrl, options)\n    if (response.ok) {\n      const data = await response.json()\n      const updatedData = this.changeToCamelCase(data.profile_details)\n\n      this.setState({\n        jobProfileDescription: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  checkEmploymentType = typeId => {\n    const {employmentTypeFilter, updateEmploymentTypeFilter} = this.props\n    const updatedList = employmentTypeFilter.includes(typeId)\n      ? employmentTypeFilter.filter(each => each !== typeId)\n      : [...employmentTypeFilter, typeId]\n    updateEmploymentTypeFilter(updatedList)\n  }\n\n  updateSalaryRangeRadio = salaryId => {\n    const {updateSalaryRange} = this.props\n    updateSalaryRange(salaryId)\n  }\n\n  render() {\n    const {apiStatus, jobProfileDescription} = this.state\n    const {\n      employmentTypesList,\n      salaryRangesList,\n      salaryRange,\n      employmentTypeFilter,\n    } = this.props\n    return (\n      <div className=\"job-filter-main-bg-container\">\n        <ProfilePanel\n          profileApiStatus={apiStatus}\n          jobProfileDescription={jobProfileDescription}\n          getProfileDetails={this.getProfileDetails}\n        />\n        <hr className=\"separator\" />\n        <FilterJobSearch\n          employmentTypesList={employmentTypesList}\n          employmentTypeFilter={employmentTypeFilter}\n          checkEmploymentType={this.checkEmploymentType}\n          salaryRangesList={salaryRangesList}\n          salaryRange={salaryRange}\n          updateSalaryRangeRadio={this.updateSalaryRangeRadio}\n        />\n      </div>\n    )\n  }\n}\n\nexport default JobFilterPanel\n","import {AiFillStar} from 'react-icons/ai'\nimport {IoLocationSharp} from 'react-icons/io5'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst JobCard = props => {\n  const {jobDetails} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    packagePerAnnum,\n    rating,\n    title,\n    id,\n  } = jobDetails\n  return (\n    <li className=\"job-card\">\n      <Link to={`/jobs/${id}`} className=\"job-card-link\">\n        <div className=\"logo-title-container-card\">\n          <img\n            src={companyLogoUrl}\n            alt=\"company logo\"\n            className=\"company-logo-card\"\n          />\n          <div>\n            <h1 className=\"job-title-card\">{title}</h1>\n            <div className=\"rating-container-card\">\n              <AiFillStar className=\"star-icon-card\" />\n              <p className=\"rating-number-card\">{rating}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"location-package-container-card\">\n          <div className=\"icon-type-container-card\">\n            <IoLocationSharp className=\"type-icon\" />\n            <p className=\"type-text\">{location}</p>\n          </div>\n          <div className=\"icon-type-container-card\">\n            <BsFillBriefcaseFill className=\"type-icon\" />\n            <p className=\"type-text\">{employmentType}</p>\n          </div>\n          <p className=\"package-text\">{packagePerAnnum}</p>\n        </div>\n        <hr className=\"separator\" />\n        <h1 className=\"description-heading-card\">Description</h1>\n        <p className=\"job-description-card\">{jobDescription}</p>\n      </Link>\n    </li>\n  )\n}\n\nexport default JobCard\n","import {Component} from 'react'\n\nimport Loader from 'react-loader-spinner'\nimport {BsSearch} from 'react-icons/bs'\n\nimport Cookies from 'js-cookie'\n\nimport JobFilterPanel from '../JobFilterPanel'\nimport JobCard from '../JobCard'\n\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  failure: 'FAILURE',\n  success: 'SUCCESS',\n}\n\nclass JobsTab extends Component {\n  state = {\n    apiStatus: apiStatusConstants.initial,\n    salaryRange: '',\n    employmentTypeFilter: [],\n    searchInput: '',\n    jobsList: [],\n  }\n\n  componentDidMount() {\n    this.getJobsList()\n  }\n\n  convertDataToCamelCase = jobs =>\n    jobs.map(eachData => ({\n      companyLogoUrl: eachData.company_logo_url,\n      employmentType: eachData.employment_type,\n      id: eachData.id,\n      jobDescription: eachData.job_description,\n      location: eachData.location,\n      packagePerAnnum: eachData.package_per_annum,\n      rating: eachData.rating,\n      title: eachData.title,\n    }))\n\n  getJobsList = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n\n    const jwtToken = Cookies.get('jwt_token')\n    const {salaryRange, employmentTypeFilter, searchInput} = this.state\n    const employmentTypeQuery = employmentTypeFilter.join(',')\n    const apiUrl = `https://apis.ccbp.in/jobs?employment_type=${employmentTypeQuery}&minimum_package=${salaryRange}&search=${searchInput}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n\n    if (response.ok) {\n      const data = await response.json()\n      const updatedData = this.convertDataToCamelCase(data.jobs)\n      this.setState({\n        jobsList: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  changeSearchInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  onEnterKey = event => {\n    if (event.key === 'Enter') {\n      this.getJobsList()\n    }\n  }\n\n  renderSearchBar = () => {\n    const {searchInput} = this.state\n    return (\n      <div className=\"search-input-bg-container\">\n        <input\n          type=\"search\"\n          placeholder=\"Search\"\n          onChange={this.changeSearchInput}\n          value={searchInput}\n          onKeyDown={this.onEnterKey}\n          className=\"search-input\"\n        />\n        <button\n          className=\"search-icon-container\"\n          type=\"button\"\n          onClick={this.getJobsList}\n          data-testid=\"searchButton\"\n        >\n          <BsSearch className=\"search-icon\" />\n        </button>\n      </div>\n    )\n  }\n\n  renderNoJobFoundView = () => (\n    <div className=\"failure-main-bg-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n        alt=\"no jobs\"\n        className=\"failure-view-image\"\n      />\n      <h1 className=\"failure-heading\">No Jobs Found</h1>\n      <p className=\"failure-description\">\n        We could not find any jobs. Try other filters.\n      </p>\n    </div>\n  )\n\n  renderSuccessView = () => {\n    const {jobsList} = this.state\n    return (\n      <>\n        {jobsList.length > 0 ? (\n          <ul className=\"job-description-unordered-list-container\">\n            {jobsList.map(eachJobDescription => (\n              <JobCard\n                jobDetails={eachJobDescription}\n                key={eachJobDescription.id}\n              />\n            ))}\n          </ul>\n        ) : (\n          this.renderNoJobFoundView()\n        )}\n      </>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"failure-main-bg-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"failure-view-image\"\n      />\n      <h1 className=\"failure-heading\"> Oops! Something Went Wrong </h1>\n      <p className=\"failure-description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        className=\"jobs-failure-button\"\n        onClick={this.getJobsList}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobDescriptionList = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  updateEmploymentTypeFilter = updatedList => {\n    this.setState({employmentTypeFilter: updatedList}, this.getJobsList)\n  }\n\n  updateSalaryRange = salaryId => {\n    this.setState({salaryRange: salaryId}, this.getJobsList)\n  }\n\n  render() {\n    const {salaryRange, employmentTypeFilter} = this.state\n    return (\n      <div className=\"jobs-tab-main-bg-container\">\n        <JobFilterPanel\n          employmentTypesList={employmentTypesList}\n          employmentTypeFilter={employmentTypeFilter}\n          updateEmploymentTypeFilter={this.updateEmploymentTypeFilter}\n          salaryRangesList={salaryRangesList}\n          salaryRange={salaryRange}\n          updateSalaryRange={this.updateSalaryRange}\n        />\n        <div className=\"job-output-bg-container\">\n          {this.renderSearchBar()}\n          {this.renderJobDescriptionList()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default JobsTab\n","import Header from '../Header'\nimport JobsTab from '../JobsTab'\n\nimport './index.css'\n\nconst Jobs = () => (\n  <div className=\"jobs-page-main-bg-container\">\n    <Header />\n    <JobsTab />\n  </div>\n)\n\nexport default Jobs\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const jwtToken = Cookie.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {AiFillStar} from 'react-icons/ai'\nimport {IoLocationSharp} from 'react-icons/io5'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport './index.css'\n\nconst SimilarJobCard = props => {\n  const {jobDetails} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    rating,\n    title,\n  } = jobDetails\n\n  return (\n    <li className=\"similar-job-card\">\n      <div className=\"logo-title-container-card\">\n        <img\n          src={companyLogoUrl}\n          alt=\"similar job company logo\"\n          className=\"company-logo-card\"\n        />\n        <div className=\"title-rating-container-card\">\n          <h1 className=\"job-title-card\">{title}</h1>\n          <div className=\"rating-container-card\">\n            <AiFillStar className=\"star-icon-card\" />\n            <p className=\"rating-number-card\">{rating}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"description-heading-card\">Description</h1>\n      <p className=\"job-description-card\">{jobDescription}</p>\n      <div className=\"location-package-container-card\">\n        <div className=\"icon-type-container-card\">\n          <IoLocationSharp className=\"type-icon\" />\n          <p className=\"type-text\">{location}</p>\n        </div>\n        <div className=\"icon-type-container-card\">\n          <BsFillBriefcaseFill className=\"type-icon\" />\n          <p className=\"type-text\">{employmentType}</p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default SimilarJobCard\n","import {Component} from 'react'\n\nimport {AiFillStar} from 'react-icons/ai'\nimport {IoLocationSharp} from 'react-icons/io5'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {FiExternalLink} from 'react-icons/fi'\nimport Loader from 'react-loader-spinner'\n\nimport Cookies from 'js-cookie'\n\nimport Header from '../Header'\nimport SimilarJobCard from '../SimilarJobCard'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass JobItemDetails extends Component {\n  state = {\n    jobDetailsApiStatus: apiStatusConstants.initial,\n    jobDetails: {},\n    similarJobs: [],\n  }\n\n  componentDidMount() {\n    this.getJobItemDetails()\n  }\n\n  getCamelCasedData = data => {\n    const jobDetails = data.job_details\n\n    const updatedJobDetails = {\n      companyLogoUrl: jobDetails.company_logo_url,\n      companyWebsiteUrl: jobDetails.company_website_url,\n      employmentType: jobDetails.employment_type,\n      jobDescription: jobDetails.job_description,\n      location: jobDetails.location,\n      rating: jobDetails.rating,\n      title: jobDetails.title,\n      packagePerAnnum: jobDetails.package_per_annum,\n      skills: jobDetails.skills.map(eachSkill => ({\n        imageUrl: eachSkill.image_url,\n        name: eachSkill.name,\n      })),\n      lifeAtCompnay: {\n        description: jobDetails.life_at_company.description,\n        imageUrl: jobDetails.life_at_company.image_url,\n      },\n    }\n\n    const similarJobs = data.similar_jobs.map(eachJob => ({\n      companyLogoUrl: eachJob.company_logo_url,\n      employmentType: eachJob.employment_type,\n      id: eachJob.id,\n      jobDescription: eachJob.job_description,\n      location: eachJob.location,\n      rating: eachJob.rating,\n      title: eachJob.title,\n    }))\n\n    return {updatedJobDetails, similarJobs}\n  }\n\n  getJobItemDetails = async () => {\n    this.setState({jobDetailsApiStatus: apiStatusConstants.inProgress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const jwtToken = Cookies.get('jwt_token')\n\n    const apiUrl = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      const {updatedJobDetails, similarJobs} = this.getCamelCasedData(data)\n\n      this.setState({\n        jobDetails: updatedJobDetails,\n        similarJobs,\n        jobDetailsApiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({jobDetailsApiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoaderView = () => (\n    <div className=\"jobs-loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderApiFailureView = () => (\n    <div className=\"jobs-api-failure-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"job-api-failure-image\"\n      />\n      <h1 className=\"failure-view-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-view-description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={() => this.getJobItemDetails()}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderJobDetails = () => {\n    const {jobDetails, similarJobs} = this.state\n    const {\n      companyLogoUrl,\n      employmentType,\n      jobDescription,\n      location,\n      rating,\n      title,\n      packagePerAnnum,\n      companyWebsiteUrl,\n      skills,\n      lifeAtCompnay,\n    } = jobDetails\n\n    return (\n      <div className=\"job-details-content-container\">\n        <div className=\"job-details\">\n          <div className=\"logo-title-container-card\">\n            <img\n              src={companyLogoUrl}\n              alt=\"job details company logo\"\n              className=\"company-logo-card\"\n            />\n            <div className=\"title-rating-container-card\">\n              <h1 className=\"job-title-card\">{title}</h1>\n              <div className=\"rating-container-card\">\n                <AiFillStar className=\"star-icon-card\" />\n                <p className=\"rating-number-card\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"location-package-container-card\">\n            <div className=\"icon-type-container-card\">\n              <IoLocationSharp className=\"type-icon\" />\n              <p className=\"type-text\">{location}</p>\n            </div>\n            <div className=\"icon-type-container-card\">\n              <BsFillBriefcaseFill className=\"type-icon\" />\n              <p className=\"type-text\">{employmentType}</p>\n            </div>\n            <p className=\"package-text\">{packagePerAnnum}</p>\n          </div>\n\n          <hr className=\"separator\" />\n          <div className=\"description-visit-link-container\">\n            <h1 className=\"description-heading-card\">Description</h1>\n            <a href={companyWebsiteUrl} className=\"company-link\">\n              Visit\n              <FiExternalLink className=\"external-link-logo\" />\n            </a>\n          </div>\n          <p className=\"job-description-card\">{jobDescription}</p>\n          <h1 className=\"skills-heading\">Skills</h1>\n          <ul className=\"skills-list\">\n            {skills.map(eachSkill => {\n              const {imageUrl, name} = eachSkill\n              return (\n                <li className=\"skill-item\" key={name}>\n                  <img src={imageUrl} alt={name} className=\"skill-image\" />\n                  <p className=\"skill-name\">{name}</p>\n                </li>\n              )\n            })}\n          </ul>\n          <h1 className=\"life-at-company-heading\">Life at Company</h1>\n          <div className=\"company-life-container\">\n            <p className=\"life-description\">{lifeAtCompnay.description}</p>\n            <img\n              className=\"life-image\"\n              src={lifeAtCompnay.imageUrl}\n              alt=\"life at company\"\n            />\n          </div>\n        </div>\n        <h1 className=\"similar-jobs-heading\">Similar Jobs</h1>\n        <ul className=\"similar-jobs-list\">\n          {similarJobs.map(eachJob => (\n            <SimilarJobCard key={eachJob.id} jobDetails={eachJob} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderJobDetailsPage() {\n    const {jobDetailsApiStatus} = this.state\n    switch (jobDetailsApiStatus) {\n      case apiStatusConstants.inProgress:\n        return this.renderLoaderView()\n      case apiStatusConstants.success:\n        return this.renderJobDetails()\n      case apiStatusConstants.failure:\n        return this.renderApiFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"job-details-page\">\n        <Header />\n        {this.renderJobDetailsPage()}\n      </div>\n    )\n  }\n}\n\nexport default JobItemDetails\n","import './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-page\">\n    <div className=\"not-found-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n        alt=\"not found\"\n        className=\"not-found-image\"\n      />\n      <h1 className=\"not-found-heading\">Page Not Found</h1>\n      <p className=\"not-found-description\">\n        We are sorry, the page you requested could not be found\n      </p>\n    </div>\n  </div>\n)\n\nexport default NotFound\n","import {Route, Switch, Redirect} from 'react-router-dom'\n\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Jobs from './components/Jobs'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport JobItemDetails from './components/JobItemDetails'\nimport NotFound from './components/NotFound'\n\nimport './App.css'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute exact path=\"/jobs/:id\" component={JobItemDetails} />\n    <Route exact path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"/not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {HashRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}